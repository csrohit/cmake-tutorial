# a fatal error will e issued if version of cmake is lower thanthat is used
cmake_minimum_required(VERSION 3.5 FATAL_ERROR)

# declare the name of the project and supported languages
project(demo-library LANGUAGES CXX)

# Create a new target i.e. static library
add_library(message-objs OBJECT Message.hpp Message.cpp)

# ensure that compilation to object files generate position independent code
# this is required only for older compilers but does no harm on newer compilers
set_target_properties(message-objs
    PROPERTIES
        POSITION_INDEPENDENT_CODE 1
)

# Generate shared library message-shared
add_library(message-shared
  SHARED
    $<TARGET_OBJECTS:message-objs>
  )

# set name of shared library as libmessage.so
set_target_properties(message-shared
  PROPERTIES
    OUTPUT_NAME "message"
  )

# Generate a static library message-shared
add_library(message-static
  STATIC
    $<TARGET_OBJECTS:message-objs>
  )

# set name of static library as libmessage.a
set_target_properties(message-static
  PROPERTIES
    OUTPUT_NAME "message"
  )


# We instruct CMake to create a new target: the executable hello-world. This executable is generated by compiling and linking the source file hello-world.cpp
add_executable(demo-library main.cpp)

# tell cmake that library target has to be linked with the executable target
target_link_libraries(demo-library message-static)